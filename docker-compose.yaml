services:
  todoapp:
    restart: always
    image: CharlesPatterson/todoapp
    healthcheck:
      test: curl --fail http://localhost:8080/healthz || exit 1
      interval: 10s
      start_period: 10s
      timeout: 10s
      retries: 3
    ports:
      - 8080:8080
    depends_on:
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
  postgres:
    image: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      start_period: 10s
      timeout: 10s
      retries: 3
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_DB: default_database
  pgadmin:
    image: dpage/pgadmin4
    healthcheck:
      test: ["CMD", "wget", "-O", "-", "http://localhost:80/misc/ping"]
      interval: 10s
      timeout: 10s
      start_period: 10s
      retries: 3
    profiles: ["admin-tools"]
    ports:
      - 15433:80
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@test.com
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_DISABLE_POSTFIX: true
    depends_on:
      postgres:
        condition: service_healthy
  mongodb:
    image: mongo
    restart: always
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      start_period: 10s
      timeout: 10s
      retries: 3
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password1234

  mongo-express:
    image: mongo-express
    restart: always
    profiles: ["admin-tools"]
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password1234
      ME_CONFIG_MONGODB_URL: mongodb://admin:password1234@mongodb:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      mongodb:
        condition: service_healthy
  redis:
    image: redis
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 10s
      start_period: 10s
      retries: 3
    ports:
      - '6379:6379'
  redisinsight:
    image: redis/redisinsight
    profiles: ["admin-tools"]
    restart: always
    ports:
      - '5540:5540'
    environment:
      RI_REDIS_HOST: redis
    depends_on:
      redis:
        condition: service_healthy
  dynamodb-local:
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data -disableTelemetry"
    image: "amazon/dynamodb-local:latest"
    container_name: dynamodb-local
    profiles: ["dynamodb"]
    ports:
     - "8000:8000"
    volumes:
     - "./docker/dynamodb:/home/dynamodblocal/data"
    working_dir: /home/dynamodblocal
